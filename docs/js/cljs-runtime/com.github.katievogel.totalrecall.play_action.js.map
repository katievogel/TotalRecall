{"version":3,"sources":["com/github/katievogel/totalrecall/play_action.cljs"],"mappings":";AAWA,AAAA,AAAMA,AAAgBC;AAAtB,AACE,AAAMC,AAAgB,AAAA,AAAA,AAAA,AAACC,AAAOF;AACxBG,AAAiB,AAAA,AAAA,AAAA,AAACD,AAAOF;AAD/B,AAEE,AACE,AAACI,AAAEH,AAAgBE;AAAkB,AAAA,AAAA,AAACE,AAAUL,AAAYM;;AAD9D,AAEQ,AAAA,AAAA,AAACD,AAAUL,AAAcM;;;;AAErC,AAAA,AAACC,AAEC,AAAAC,AAAKR;AAAL,AAAA,AAAAS,AAAAD;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAASE;AAAT,AAAAD,AAAAD,AAAA,AAAA,AAAWG;AAAX,AACC,AACG,AAAA,AAACR,AAAE,AAAA,AAAaJ;AAAS,AAAA,AAACa,AAAMb,AAAeY;;AADlD,AAEG,AAAA,AAACR,AAAE,AAAA,AAAcJ;AAAaA,AACF,AAAA,AAACa,AAAmBD,AACpB,AAACb;;AAJhC,AAKSC;;;;;AAgBZ,AAAA,AAACc,AAEC,AAAAC,AAAKf;AAAL,AAAA,AAAAgB,AAAAD;AAAA,AAAAL,AAAAM,AAAA,AAAA,AAASL;AAAT,AACEX","names":["com.github.katievogel.totalrecall.play-action/pick-tile-eval","db","first-pick-pair","cljs.core.get_in","second-pick-pair","cljs.core._EQ_","cljs.core.update_in","cljs.core/inc","re_frame.core.reg_event_db","p__43509","vec__43510","cljs.core.nth","_","record","cljs.core.assoc","re_frame.core.reg_sub","p__43513","vec__43514"],"sourcesContent":["(ns com.github.katievogel.totalrecall.play-action\n  (:require [com.github.katievogel.totalrecall.state :refer [initial-state]]\n            [re-frame.core :as rf]))\n\n\n;player clicks tile\n;tile flips\n;player clicks another tile\n;tile flips\n;if matches, tiles stay flipped\n;if wrong, flip back over\n(defn pick-tile-eval [db]\n  (let [first-pick-pair (get-in db [:first-pick :pair])\n        second-pick-pair (get-in db [:second-pick :pair])]\n    (cond\n      (= first-pick-pair second-pick-pair) (update-in db [:score] inc)\n      :else (update-in db [:strikes] inc))))\n\n(rf/reg-event-db\n  :pick-tile\n  (fn [db [_ record]]\n   (cond\n      (= (:first-pick db) nil) (assoc db :first-pick record)\n      (= (:second-pick db) nil) (-> db\n                                  (assoc :second-pick record)\n                                  (pick-tile-eval))\n      :else db)))\n\n\n\n;(rf/reg-sub\n;  :get-first-tile-pick\n;  (fn [db [_]]\n;    (:first-pick db)))\n;\n;(rf/reg-sub\n;  :get-second-tile-pick\n;  (fn [db [_]]\n;    (:second-pick db)))\n\n\n;----just for seeing state on page----\n(rf/reg-sub\n  :get-db\n  (fn [db [_]]\n    db))"]}