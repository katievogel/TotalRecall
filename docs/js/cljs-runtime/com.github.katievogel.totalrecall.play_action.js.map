{"version":3,"sources":["com/github/katievogel/totalrecall/play_action.cljs"],"mappings":";AAWA,AAAA,AAACA,AAEC,AAAAC,AAAKG;AAAL,AAAA,AAAAF,AAAAD;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAASG;AAAT,AAAAF,AAAAD,AAAA,AAAA,AAAWI;AAAX,AACE,AACE,AAAA,AAACC,AAAE,AAAA,AAAaH;AAAS,AAAA,AAACI,AAAMJ,AAAeE;;AADjD,AAEE,AAAA,AAACC,AAAE,AAAA,AAAcH;AAAS,AAAA,AAACI,AAAMJ,AAAgBE;;AAFnD,AAAA;;;;;AAKJ,AAGA,AAAA,AAACG,AAEC,AAAAC,AAAKN;AAAL,AAAA,AAAAO,AAAAD;AAAA,AAAAP,AAAAQ,AAAA,AAAA,AAASN;AAAT,AACED","names":["re_frame.core.reg_event_db","p__44942","vec__44943","cljs.core.nth","db","_","record","cljs.core._EQ_","cljs.core.assoc","re_frame.core.reg_sub","p__44946","vec__44947"],"sourcesContent":["(ns com.github.katievogel.totalrecall.play-action\n  (:require [com.github.katievogel.totalrecall.state :refer [initial-state]]\n            [re-frame.core :as rf]))\n\n\n;player clicks tile\n;tile flips\n;player clicks another tile\n;tile flips\n;if matches, tiles stay flipped\n;if wrong, flip back over\n(rf/reg-event-db\n  :pick-tile\n  (fn [db [_ record]]\n    (cond\n      (= (:first-pick db) nil) (assoc db :first-pick record)\n      (= (:second-pick db) nil) (assoc db :second-pick record)\n      :else nil)))\n\n(comment\n  (= :first-pick nil))\n\n(rf/reg-sub\n  :get-db\n  (fn [db [_]]\n    db))\n;(rf/reg-sub\n;  :get-first-tile-pick\n;  (fn [db [_]]\n;    (:first-pick db)))\n;\n;(rf/reg-sub\n;  :get-second-tile-pick\n;  (fn [db [_]]\n;    (:second-pick db)))\n\n;(defn click-tile [first-pick second-pick]\n;  (let))"]}